{"ast":null,"code":"var _jsxFileName = \"/opt/nodejs/bin2dec/src/containers/Home.js\";\nimport React, { Component } from \"react\";\nimport \"./Home.css\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      binary: '11110000',\n      decimal: '240'\n    };\n    this.handleBinChange = this.handleBinChange.bind(this); //this.handleDecChange = this.handleDecChange.bind(this);\n  }\n\n  handleBinChange(e) {\n    var i;\n    var decimalValue = 0; //Check for ones and zeros, if true, then start adding)\n\n    console.log(\"Binary field length: \" + e.target.value.length);\n\n    for (i = e.target.value.length - 1; i >= 0; i--) {\n      console.log(\"Current value: \" + i + \":\" + e.target.value[i]);\n\n      if (e.target.value[i] === \"1\") {\n        decimalValue += 2 ** i;\n        console.log(\"decimalValue: \" + decimalValue);\n      } else if (e.target.value[i] === \"0\") {\n        console.log(\"decimalValue: \" + decimalValue);\n      } else {\n        decimalValue = \"Not a valid binary number!\";\n        break;\n      }\n    }\n\n    this.setState({\n      binary: e.target.value,\n      decimal: decimalValue\n    });\n  } //handleDecChange(e) {\n  //this.setState({\n  //binary: e.target.value\n  //});\n  //}\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lander\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Bin2Dec\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Enter Binary: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"binary\",\n      value: this.state.binary,\n      onChange: this.handleBinChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Enter Decimal: \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.decimal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/nodejs/bin2dec/src/containers/Home.js"],"names":["React","Component","Home","constructor","props","state","binary","decimal","handleBinChange","bind","e","i","decimalValue","console","log","target","value","length","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,UADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB,CARiB,CASjB;AACD;;AAEDD,EAAAA,eAAe,CAACE,CAAD,EAAI;AACjB,QAAIC,CAAJ;AACA,QAAIC,YAAY,GAAG,CAAnB,CAFiB,CAGjB;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,MAArD;;AACA,SAAIN,CAAC,GAAGD,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAsB,CAA9B,EAAiCN,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5CE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBH,CAApB,GAAwB,GAAxB,GAA8BD,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeL,CAAf,CAA1C;;AACA,UAAGD,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeL,CAAf,MAAoB,GAAvB,EACA;AACLC,QAAAA,YAAY,IAAG,CAAD,IAAKD,CAAnB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,YAA/B;AACM,OAJD,MAKK,IAAGF,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeL,CAAf,MAAoB,GAAvB,EAA2B;AACrCE,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,YAA/B;AACM,OAFI,MAGD;AACFA,QAAAA,YAAY,GAAG,4BAAf;AACA;AACD;AACF;;AACD,SAAKM,QAAL,CAAc;AACZZ,MAAAA,MAAM,EAAEI,CAAC,CAACK,MAAF,CAASC,KADL;AAEZT,MAAAA,OAAO,EAAEK;AAFG,KAAd;AAID,GAtCyC,CAwC1C;AACE;AACE;AACF;AACF;;;AAEAO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACS;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,MAAnD;AAA2D,MAAA,QAAQ,EAAE,KAAKE,eAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT,CAFF,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACiB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CALK,CADF,CADF;AAaD;;AA5DyC","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      binary: '11110000',\n      decimal: '240'\n    };\n  \n    this.handleBinChange = this.handleBinChange.bind(this);\n    //this.handleDecChange = this.handleDecChange.bind(this);\n  }\n\n  handleBinChange(e) {\n    var i;\n    var decimalValue = 0;\n    //Check for ones and zeros, if true, then start adding)\n    \n    console.log(\"Binary field length: \" + e.target.value.length);\n    for(i = e.target.value.length-1; i >= 0; i--) {  \n      console.log(\"Current value: \" + i + \":\" + e.target.value[i]);\n      if(e.target.value[i]===\"1\")\n      {\n\tdecimalValue+=(2)**i;\n\tconsole.log(\"decimalValue: \" + decimalValue);\n      }\n      else if(e.target.value[i]===\"0\"){\n\tconsole.log(\"decimalValue: \" + decimalValue);\n      }\n      else{\n        decimalValue = \"Not a valid binary number!\"\n        break;\n      }\n    }\n    this.setState({\n      binary: e.target.value,\n      decimal: decimalValue \n    });\n  }\n\n  //handleDecChange(e) {\n    //this.setState({\n      //binary: e.target.value\n    //});\n  //}\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"lander\">\n          <h1>Bin2Dec</h1>\n          <div>\n\t    Enter Binary: <input type=\"text\" name=\"binary\" value={this.state.binary} onChange={this.handleBinChange} />\n          </div>\n\t  <div>\n\t    Enter Decimal: <input type=\"text\" value={this.state.decimal} />\n\t  </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}